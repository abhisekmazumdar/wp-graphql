<?php

class QueryPerformanceTest extends \Codeception\TestCase\WPTestCase {

	/**
	 * @var array
	 */
	public $reports = [];

	public function setUp(): void {
		WPGraphQL::clear_schema();
		parent::setUp(); // TODO: Change the autogenerated stub

	}

	public function tearDown(): void {
		// your tear down methods here

		// then
		WPGraphQL::clear_schema();
		$this->save_reports();

		parent::tearDown();

	}

	public function testValidSchema() {
		$this->assertTrue( true );
	}

	public function testQueryPerformance() {
		$this->factory()->post->create_many( 1000, [
			'post_status' => 'publish'
		] );
		$this->factory()->user->create_many(1000 );
		$app = new AppGati();
		$app->step('start_query_posts');
		$actual = graphql([
			'query' => '{posts{nodes{id,title}}}'
		]);
		$app->step('end_query_posts');
		codecept_debug( [ $app->getReport('start_query_posts', 'end_query_posts' ), $actual ] );
		$this->report( $app->getReport('start_query_posts', 'end_query_posts' ) );
	}

	public function testSchemaPerformance() {
		$app = new AppGati();
		$app->step('start_get_schema');

		graphql([ 'query' => \GraphQL\Type\Introspection::getIntrospectionQuery() ]);
		$app->step('end_get_schema');

		codecept_debug( [ $app->getReport('start_get_schema', 'end_get_schema' ) ] );

		$this->report( $app->getReport( 'start_get_schema', 'end_get_schema' ) );

	}

	public function report( array $report ) {
		$dbt=debug_backtrace(DEBUG_BACKTRACE_IGNORE_ARGS,2);
		$caller = isset($dbt[1]['function']) ? $dbt[1]['function'] : null;
		$this->reports[ $caller ] = $report;
	}

	public function save_reports() {

		$filepath = dirname( __DIR__ ) . '/_output/performance-report.json';

		codecept_debug( $filepath );

		if ( ! file_exists( $filepath ) ) {
			file_put_contents($filepath, wp_json_encode([ 'performance_report' => date('F j, Y, g:i a', strtotime('now' ) ) ]));
		}
		$report = file_get_contents( $filepath );
		$report = (array) $report;

		$new_reports = array_merge( $report, $this->reports );

		file_put_contents( $filepath, wp_json_encode( $new_reports ) );

		codecept_debug( $new_reports );

	}

}
